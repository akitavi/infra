apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "enviapp.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "enviapp.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "enviapp.name" . }}
    spec:
      nodeSelector:
        storage: "true"
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
      containers:
      - name: enviapp
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
          - containerPort: 8000
        command: ["python", "main.py"]
        env:
        {{- range $key, $value := .Values.env }}
          - name: {{ $key }}
            value: "{{ $value }}"
        {{- end }}
        envFrom:
          - secretRef:
              name: {{ .Values.secretRef }}
        volumeMounts:
          - name: static-data
            mountPath: /envi/static/images
            subPath: images
          - name: static-data
            mountPath: /envi/static/preview
            subPath: preview
          - name: static-data
            mountPath: /envi/static/user_video
            subPath: user_video
          - name: static-data
            mountPath: /envi/static/user_files
            subPath: user_files
          {{- if .Values.accessLog.enabled }}
          - mountPath: /envi/access.log
            name: accesslog-vol
          {{- end }}
      volumes:
        - name: static-data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
        {{- if .Values.accessLog.enabled }}
        - name: accesslog-vol
          hostPath:
            path: {{ .Values.accessLog.hostPath }}
            type: File
        {{- end }}
